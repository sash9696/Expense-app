{"version":3,"sources":["ExpenseForm.js","NewExpense.js","Card.js","ExpenseFilter.js","ChartBar.js","Chart.js","ExpensesChart.js","ExpenseDate.js","ExpenseItem.js","ExpensesList.js","Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","calssName","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.feeef8d2.chunk.js","sourcesContent":["import React ,{useState} from 'react';\r\nimport './ExpenseForm.css'\r\nconst ExpenseForm = (props) =>{\r\n    \r\n    const [enteredTitle, setEnteredTitle]=useState();\r\n    const [enteredAmount, setEnteredAmount]=useState();\r\n    const [enteredDate, setEnteredDate]=useState();\r\n    const titleChangeHandler = (event) =>{\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n    };\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n          };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}/>\r\n\r\n\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        min=\"0.01\"\r\n                        step=\"0.01\" \r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}/>\r\n\r\n\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                         type=\"date\"\r\n                          min=\"2019-01-01\" \r\n                          max=\"2022-12-31\" \r\n                          value={enteredDate}\r\n                          onChange={dateChangeHandler}/>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n                \r\n        \r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css'\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing]=useState(false);\r\n    const  saveExpenseDataHandler = (enteredExpenseData) =>{\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n    const startEditingHandler = () =>{\r\n        setIsEditing(true);\r\n    };\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n    return(\r\n        <div className=\"new-expense\">\r\n          {!isEditing && <button onClick={startEditingHandler} >Add New Expense</button>}\r\n          { isEditing && \r\n            <ExpenseForm \r\n                onSaveExpenseData={saveExpenseDataHandler}\r\n                onCancel={stopEditingHandler}/>}\r\n          \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes = 'card '+ props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler =(event)=>{\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n  return (\r\n      \r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight='0%';\r\n\r\n    if(props.maxValue>0 ){\r\n        barFillHeight = Math.round(props.value/props.maxValue*100)+'%';\r\n    }\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style ={{height:barFillHeight}}> </div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\n\r\nconst Chart = (props) =>{\r\n    const dataPointValues= props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum=Math.max(...dataPointValues);\r\n    return <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint =>\r\n             <ChartBar \r\n                key={dataPoint.label}\r\n                value={dataPoint.value} \r\n                maxValue={totalMaximum}\r\n                label={dataPoint.label}\r\n                /> )}\r\n\r\n    </div>\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from './Chart';\r\n\r\nconst ExpensesChart=props =>{\r\n    const chartDataPoints =[\r\n        {label:'Jan', value:0},\r\n        {label:'Feb', value:0},\r\n        {label:'Mar', value:0},\r\n        {label:'Apr', value:0},\r\n        {label:'May', value:0},\r\n        {label:'Jun', value:0},\r\n        {label:'Jul', value:0},\r\n        {label:'Aug', value:0},\r\n        {label:'Sep', value:0},\r\n        {label:'Oct', value:0},\r\n        {label:'Nov', value:0},\r\n        {label:'Dec', value:0},\r\n    ];\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value +=expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n\r\n};\r\nexport default ExpensesChart;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US',{month: 'long'});\r\n    const day = props.date.toLocaleString('en-US',{day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default ExpenseDate;","import React     from 'react';\r\nimport ExpenseDate from './ExpenseDate'\r\nimport Card from './Card';\r\nimport './ExpenseItem.css'\r\nfunction ExpenseItem(props){\r\n   \r\n    \r\n    return(\r\n        <list>\r\n        <Card className=\"expense-item\">\r\n             <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{ props.title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n\r\n            \r\n        </Card>\r\n        </list>\r\n        \r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css'\r\n\r\n\r\nconst ExpensesList= props =>{\r\n\r\n   \r\n    if (props.items.length===0){\r\n        return <h3 className=\"expense-list__fallback\">Found no Expenses</h3>\r\n        \r\n        \r\n    }\r\n    return <ul calssName=\"expenses-list\">\r\n        {props.items.map((expense) =>\r\n       \r\n       <ExpenseItem  \r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            \r\n            date={expense.date}/>)}\r\n    </ul>\r\n};\r\nexport default ExpensesList;","import React,{useState} from 'react';\r\n\r\nimport './Expenses.css'\r\nimport Card from './Card'\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport ExpensesList from './ExpensesList';\r\n\r\nfunction Expenses (props){\r\n    \r\n    const [filteredYear, setFilteredYear]= useState('2020');\r\n    const filterChangeHandler = selectedYear =>{\r\n        setFilteredYear(selectedYear);\r\n    };\r\n    const filteredExpenses = props.items.filter(expense=>{\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n   \r\n    return(\r\n        <div className=\"\">\r\n\r\n\r\n        <Card className=\"expenses\">\r\n         \r\n            <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpensesList items={filteredExpenses}/>\r\n                \r\n           \r\n                \r\n        </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default Expenses;","import React, {useState} from 'react';\nimport './App.css'\nimport NewExpense from './NewExpense';\nimport Expenses from './Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n\n];\n\n\nfunction App() {\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n  \n   const addExpenseHandler = (expense) =>{\n      setExpenses((prevExpenses) =>{\n        return [expense,...prevExpenses];\n      });\n   };\n  return (\n    <div>\n    <NewExpense onAddExpense={addExpenseHandler}/>\n    <div className=\"App\">\n      <Expenses items={expenses}/>\n      \n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}